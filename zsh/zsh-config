#!/bin/bash

startdirectory=$(pwd)
executiondirectory=$(dirname $0)
cd $executiondirectory

source ./zsh-config.func

#====================================================
#===================Main Functions===================
init() {
    zsh_mdebug "Enter in ${FUNCNAME[0]} function"
    zsh_debug 'Input args($@)' $@
    while [[ $# -ne 0 ]]; do
        case "$1" in
        -q | --quiet)
            quiet='-q'
            zsh_mdebug "Quiet mode enabled"
            ;;
        -v | --verbose)
            verbose='-v'
            zsh_mdebug "Verbose mode enabled"
            ;;
        esac
        shift
    done

    [[ -n $verbose ]] && zsh_verbose "Starting $(basename $0) ${FUNCNAME[0]}"

    eval install_zsh_packages "$quiet" "$verbose"
    if [[ $? -ne 0 ]]; then
        zsh_error "An error occurred while installing the packages"
        zsh_mdebug "Exiting ${FUNCNAME[0]} function"
        return 1
    fi

    eval fetch_antigen "$quiet" "$verbose"
    if [[ $? -ne 0 ]]; then
        zsh_error "An error occurred while retrieving the antigen file"
        zsh_mdebug "Exiting ${FUNCNAME[0]} function"
        return 1
    fi

    [[ -n $verbose ]] && zsh_verbose "Ending $(basename $0) ${FUNCNAME[0]}"
    zsh_mdebug "Exiting ${FUNCNAME[0]} function"
    return 0
}

apply() {
    zsh_mdebug "Enter in ${FUNCNAME[0]} function"
    zsh_debug 'Input args($@)' $@

    local user=''

    while [[ $# -ne 0 ]]; do
        case "$1" in
        -q | --quiet)
            quiet='-q'
            zsh_mdebug "quiet mode enabled"
            ;;
        -v | --verbose)
            verbose='-v'
            zsh_mdebug "verbose mode enabled"
            ;;
        -t | --template)
            if [[ "$2" =~ ^- ]]; then
                zsh_error "option '$1' requieres an argument"
                return 1
            elif [[ ! -r "$startdirectory/$2" ]]; then
                zsh_error "'$startdirectory/$2' can't be used as .zshrc template"
                return 2
            else
                template="-i $startdirectory/$2"
                shift
                zsh_debug "set template to" "$startdirectory/$template"
            fi
            ;;
        -o | --override)
            override='-o'
            ;;
        # *)
        #     if getent passwd "$1" &>/dev/null; then
        #         if [[ -z "$user" ]]; then
        #             user="$1"
        #             zsh_debug "set user to" "$user"
        #         else
        #             zsh_error "ambiguous parameter 'user' => '$user' & '$1'"
        #             return 1
        #         fi
        #     else
        #         zsh_error "Unknown argument: '$1'"
        #     fi
        #     ;;
        esac
        shift
    done

    # if [[ -z "$user" ]]; then user=$USER; fi

    [[ -n $verbose ]] && zsh_verbose "Starting $(basename $0) ${FUNCNAME[0]}"

    eval create_zshrc_file "$quiet" "$verbose" "$override" "$template"
    eval copy_p10k "$quiet" "$verbose"
    eval change_shell_to_zsh "$quiet" "$verbose"

    [[ -n $verbose ]] && zsh_verbose "Ending $(basename $0) ${FUNCNAME[0]}"
    zsh_mdebug "Exiting ${FUNCNAME[0]} function"
    return 0
}

reset() {
    while [[ $# -ne 0 ]]; do
        case "$1" in
        -q | --quiet)
            quiet='&> /dev/null'
            ;;
        -v | --verbose)
            verbose=1
            ;;
        esac
        shift
    done

    rm -rf "$HOME/.config/antigen"
    sudo apt-get remove build-essential command-not-found curl git gnupg lsb-release zsh -y &>/dev/null
    #rm ~/.p10k.zsh
    #chsh -s /bin/bash

    return 0
}

info() {
    while [[ $# -ne 0 ]]; do
        case "$1" in
        -q | --quiet)
            quiet='&> /dev/null'
            ;;
        -v | --verbose)
            verbose=1
            ;;
        esac
        shift
    done

    return 0
}

full() {
    local quiet=''
    local verbose=''
    local template=''
    local override=''
    while [[ $# -ne 0 ]]; do
        case "$1" in
        -q | --quiet)
            quiet='-q'
            ;;
        -v | --verbose)
            verbose='-v'
            ;;
        -t | --template)
            if [[ "$2" =~ ^- ]]; then
                zsh_error "option '$1' requieres an argument"
                return 1
            else
                template="-i $startdirectory/$2"
                shift
                zsh_debug "set template to" "$startdirectory/$template"
            fi
            ;;
        -o | --override)
            override='-o'
            ;;
        esac
        shift
    done

    eval init "$quiet" "$verbose"
    eval apply "$quiet" "$verbose" "$template" "$override"

    return 0
}

#====================================================

#Usage: zsh-config

#reset
#init
#apply
#info
main() {
    zsh_mdebug "Enter in ${FUNCNAME[0]} function"
    zsh_debug 'Input args($@)' $@

    local args=''
    debug=0

    for arg in $@; do
        if echo "$arg" | grep -qe '--debug'; then
            debug=1
        elif [[ -z $command ]]; then
            command="$arg"
        else
            args="$args $arg"
        fi
    done
    zsh_debug "Command" $command
    zsh_debug "Command args" "'$args'"

    case "$command" in
    init)
        init $args
        ;;
    apply)
        apply $args
        ;;
    reset)
        reset $args
        ;;
    info)
        info $args
        ;;
    full)
        full $args
        ;;
    -h | --help) ;;
    '')
        zsh_error "Please enter a command"
        exit 1
        ;;
    *)
        zsh_error "Unknown command $command"
        exit 1
        ;;
    esac

    zsh_mdebug "Exiting ${FUNCNAME[0]} function"
}

main $*